@using ChatVia.Client.Enums
@using ChatVia.Client.Services
@using ChatVia.Client.Shared.Logo;
@using ChatVia.Client.Shared.NavbarButton;
@using Blazored.LocalStorage;
@using Blazored.SessionStorage;
@using ChatVia.Shared.Helpers
@inject ILocalStorageService _localStorage
@inject ISessionStorageService _sessionStorage
@inject NavigationManager _navigationManager
@inject IFetchService _fetch

<nav class="nav-bar">
    <div class="nav-bar__container">
        <LogoComponent />

        <ul class="nav-bar__list nav-bar__list-1">
            <NavbarButtonComponent Icon="@Icons.Filled.Person" Text="Profile"
                                    Href="/profile" Match="NavLinkMatch.Prefix" />
            <NavbarButtonComponent Icon="@Icons.Filled.Chat" Text="Chats" 
                                    Href="/chats" />
            <NavbarButtonComponent Icon="@Icons.Filled.Group" Text="Groups" 
                                    Href="/groups" />
            <NavbarButtonComponent Icon="@Icons.Filled.Contacts" Text="Contacts" 
                                    Href="/contacts" />
            <NavbarButtonComponent Icon="@Icons.Filled.Settings" Text="Settings" 
                                    Href="/settings" />
        </ul>

        <ul class="nav-bar__list nav-bar__list-2">
            <NavbarButtonComponent Icon="@Icons.Filled.Language" Text="Languages"/>
            <NavbarButtonComponent Icon="@Icons.Filled.Nightlight" Text="Night mod"/>
            <MudMenu AnchorOrigin="Origin.TopRight" TransformOrigin="Origin.BottomLeft">
                <ActivatorContent>
                    <MudAvatar Variant="Variant.Outlined" >
                        @if(!string.IsNullOrEmpty(username))
                        {
                            @username[1]
                        }
                    </MudAvatar>
                </ActivatorContent>
                <ChildContent>
                    <MudMenuItem>Profile</MudMenuItem>
                    <MudMenuItem>Settings</MudMenuItem>
                    <MudMenuItem OnClick="LogoutButtonClicked">Logout</MudMenuItem>
                </ChildContent>
            </MudMenu>
        </ul>
    </div>
</nav>

@code {
    string? username = null;

    protected override async Task OnInitializedAsync()
    {
        username = await _localStorage.GetItemAsStringAsync("username") ??
                    await _sessionStorage.GetItemAsStringAsync("username");

        await base.OnInitializedAsync();
    }

    async Task LogoutButtonClicked()
    {
        await _sessionStorage.RemoveItemAsync("username");
        await _localStorage.RemoveItemAsync("username");

        await _fetch.PostAsync<string>("api/users/logout",
            includeCredentials: true,
            callback: r => _navigationManager.NavigateTo("/login"));
    }
}
